#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Update trunk commit status
summary: |
  Adds a status to a commit
description: |
  Adds a current build status to a commit with a specific context
website: https://github.com/technology-studio/bitrise-step-update-trunk-commit-status
source_code_url: https://github.com/technology-studio/bitrise-step-update-trunk-commit-status
support_url: https://github.com/technology-studio/bitrise-step-update-trunk-commit-status/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
is_always_run: true
# is_skippable: false
run_if: |-
  {{not (enveq "IS_BUILD_FAILED" "true")}}

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake
deps:
  brew:
    - name: node
  git:
    - index.js
    - package.json

toolkit:
  bash:
    entry_file: step.sh


inputs:
  - COMMIT_SHA: $BITRISE_GIT_COMMIT
    opts:
      title: "Commit hash"
      summary: Commit hash to update build info for
      description: |
        If not provided, the step will be skipped
  - IS_PENDING:
    opts:
      title: "Is pending"
      summary: Pick "no" if this is last step (after build success or failure)
      description: |
        This is required because the step needs to know if it's the last step in the workflow
      is_required: true
      value_options:
        - "no"
        - "yes"
  - APP_PLATFORM:
    opts:
      title: "App platform"
      summary: Platform of the app
      is_required: true
      value_options:
        - "ios"
        - "android"
  - CONTEXT: ci/bitrise/$APP_PLATFORM/$BITRISE_BUILD_NUMBER
    opts:
      title: "Context"
      summary: Context to use for the status
      is_required: true
  - ACCESS_TOKEN: $GITHUB_ACCESS_TOKEN
    opts:
      title: "Access token"
      summary: GitHub Access token
      is_required: true
  - REPO_OWNER: $BITRISEIO_GIT_REPOSITORY_OWNER
    opts:
      title: "Repository Owner"
      summary: Repository Owner
      is_required: true
  - REPO_SLUG: $BITRISEIO_GIT_REPOSITORY_SLUG
    opts:
      title: "Repository Name"
      summary: Repository Name
      is_required: true
